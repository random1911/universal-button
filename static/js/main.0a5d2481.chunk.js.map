{"version":3,"sources":["Button/index.js","Code/index.js","Demo/index.js","index.js"],"names":["Button","_ref","type","onClick","url","inputId","baseClass","modifier","text","title","disabled","icon","postIcon","combinedClass","concat","modifiers","split","Array","isArray","Object","toConsumableArray","length","result","map","name","trim","join","getCSSModifiers","renderIcon","iconClass","react_default","a","createElement","className","inner","href","htmlFor","defaultProps","Code","_dividedMarkup$split","markup","replace","_dividedMarkup$split2","toArray","tag","attrs","slice","attr","_attr$split","_attr$split2","slicedToArray","value","key","Demo","sampleLog","console","log","colSpan","src_Button","src_Code","rowSpan","id","ReactDOM","render","src_Demo","document","getElementById"],"mappings":"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","file":"static/js/main.0a5d2481.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nconst Button = ({\n  type,\n  onClick,\n  url,\n  inputId,\n  baseClass,\n  modifier,\n  text,\n  title,\n  disabled,\n  icon,\n  postIcon\n}) => {\n  // get BEM style modifiers\n  const getCSSModifiers = modifier => {\n    if (!modifier) return \"\";\n    let modifiers;\n    if (typeof modifier === \"string\") {\n      modifiers = modifier.split(\",\");\n    } else if (Array.isArray(modifier)) {\n      modifiers = [...modifier];\n    }\n    if (!modifiers || !modifiers.length) return \"\";\n    const result = modifiers.map(name => `${baseClass}_${name.trim()}`);\n    return ` ${result.join(\" \")}`;\n  };\n\n  const combinedClass = `${baseClass}${getCSSModifiers(modifier)}`;\n\n  const renderIcon = name => {\n    const iconClass = `${baseClass}__icon`;\n    return <span className={`${iconClass} ${iconClass}_${name}`} />;\n  };\n\n  // template of inner content\n  const inner = (\n    <span className={`${baseClass}__inner`}>\n      {icon && renderIcon(icon)}\n      {text && <span className={`${baseClass}__text`}>{text}</span>}\n      {text && postIcon && renderIcon(postIcon)}\n    </span>\n  );\n\n  // render external tag based on type prop\n  switch (type) {\n    case \"link\":\n      return (\n        <a className={combinedClass} title={title} href={url}>\n          {inner}\n        </a>\n      );\n    case \"label\":\n      return (\n        <label className={combinedClass} title={title} htmlFor={inputId}>\n          {inner}\n        </label>\n      );\n    default: {\n      return (\n        <button\n          type={type}\n          className={combinedClass}\n          title={title}\n          disabled={disabled}\n          onClick={onClick}\n        >\n          {inner}\n        </button>\n      );\n    }\n  }\n};\n\nButton.propTypes = {\n  type: PropTypes.oneOf([\"button\", \"label\", \"submit\", \"link\"]),\n  onClick: PropTypes.func,\n  url: PropTypes.string,\n  inputId: PropTypes.string,\n  baseClass: PropTypes.string,\n  modifier: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  text: PropTypes.string,\n  title: PropTypes.string,\n  disabled: PropTypes.bool,\n  icon: PropTypes.string,\n  postIcon: PropTypes.string\n};\n\nButton.defaultProps = {\n  type: \"button\",\n  baseClass: \"button\",\n  onClick: () => {}\n};\n\nexport default Button;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Code.css\";\n\nconst Code = ({markup}) => {\n  const template = /\\s(?=([^\"]*\"[^\"]*\")*[^\"]*$)/g, divider = '***';\n  const dividedMarkup = markup.replace(template, divider);\n  const [tag, ...attrs] = dividedMarkup.split(divider);\n\n  const renderAttrLine = attr => {\n    const [name, value] = attr.split('=');\n    return (\n      <span key={name}\n            className=\"code__attr\">\n        <span className=\"code__attr-name\">{name}</span>\n        { value && (<span className=\"code__attr-value\">={value}</span>) }\n      </span>\n    )\n  };\n\n  return (\n    <code className=\"code\">\n      <span className=\"code__tag\">&lt;{tag}</span>\n      {attrs.map(renderAttrLine)}\n      <span className=\"code__tag\">/&gt;</span>\n    </code>\n  )\n\n};\n\nCode.propTypes = {\n  markup: PropTypes.string.isRequired\n};\n\nexport default Code;\n","import React from \"react\";\nimport \"./Demo.css\";\nimport Button from \"../Button\";\nimport Code from \"../Code\";\n\nconst Demo = () => {\n  const sampleLog = () => {\n    console.log(\"the button was clicked\");\n  };\n  return (\n    <div className=\"demo\">\n      <header className=\"demo-header\">\n        <h1 className=\"demo-caption\">Universal button</h1>\n      </header>\n      <div className=\"demo-content\">\n        <table className=\"demo-table\">\n          <colgroup>\n            <col className=\"demo-table__first-col\" />\n            <col />\n            <col />\n          </colgroup>\n          <thead className=\"demo-table__header\">\n            <tr>\n              <th className=\"demo-table__th\">Description</th>\n              <th className=\"demo-table__th\">Result</th>\n              <th className=\"demo-table__th\">Markup</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <th className=\"demo-table__th\" colSpan=\"3\">\n                Base examples\n              </th>\n            </tr>\n            <tr>\n              <td className=\"demo-table__td\">\n                This button will make console.log()\n              </td>\n              <td className=\"demo-table__td\">\n                <Button\n                  title=\"Just button\"\n                  text=\"Click me\"\n                  onClick={sampleLog}\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button title=\"Just button\" text=\"Click me\" onClick={sampleLog}`}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"demo-table__td\">Unavailable button</td>\n              <td className=\"demo-table__td\">\n                <Button text=\"Unavailable\" disabled onClick={sampleLog} />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button text=\"Unavailable\" disabled onClick={sampleLog}`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\" rowSpan=\"2\">\n                Buttons with icons\n              </td>\n              <td className=\"demo-table__td\">\n                <Button title=\"Expand\" icon=\"expand\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code markup={`Button title=\"Expand\" icon=\"expand\"`} />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                <Button title=\"Collapse\" icon=\"collapse\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code markup={`Button title=\"Collapse\" icon=\"collapse\"`} />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Link with incorrect icons usage (an additional icon will be\n                avoided)\n              </td>\n              <td className=\"demo-table__td\">\n                <Button\n                  type=\"link\"\n                  url=\"#somePlace\"\n                  title=\"Collapse\"\n                  icon=\"collapse\"\n                  postIcon=\"expand\"\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button type=\"link\" url=\"#somePlace\" title=\"Collapse\" icon=\"collapse\" postIcon=\"expand\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">Link with two icons</td>\n              <td className=\"demo-table__td\">\n                <Button\n                  type=\"link\"\n                  url=\"#hi\"\n                  icon=\"collapse\"\n                  text=\"Howdy\"\n                  postIcon=\"expand\"\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button type=\"link\" url=\"#hi\" icon=\"collapse\" text=\"Howdy\" postIcon=\"expand\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                The icon is drawn by pseudo-elements, what makes sense to make\n                icons real element\n              </td>\n              <td className=\"demo-table__td\">\n                <Button icon=\"warning\" text=\"Warning!\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code markup={`Button icon=\"warning\" text=\"Warning!\"`} />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\" rowSpan=\"3\">\n                BEM-modifiers via strings or array\n              </td>\n              <td className=\"demo-table__td\">\n                <Button\n                  text=\"['green','small']\"\n                  modifier={[\"green\", \"small\"]}\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button text=\"['green','small']\" modifier={['green','small']}`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                <Button text=\"'green'\" modifier=\"green\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code markup={`Button text=\"'green'\" modifier=\"green\"`} />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                <Button text=\"'green, large'\" modifier=\"green, large\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button text=\"'green, large'\" modifier=\"green, large\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Label usage example in a simulation of drag&drop zone\n              </td>\n              <td className=\"demo-table__td\">\n                <div className=\"drop-area-simulator\">\n                  <input type=\"file\" id=\"file\" className=\"visually-hidden\" />\n                  <Button type=\"label\" inputId=\"file\" text=\"Attach file\" />\n                </div>\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button type=\"label\" inputId=\"file\" text=\"Attach file\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Button type submit (beware of reload!)\n              </td>\n              <td className=\"demo-table__td\">\n                <form>\n                  <Button type=\"submit\" text=\"Submit!\" />\n                </form>\n              </td>\n              <td className=\"demo-table__td\">\n                <Code markup={`Button type=\"submit\" text=\"Submit!\"`} />\n              </td>\n            </tr>\n\n            <tr>\n              <th className=\"demo-table__th\" colSpan=\"3\">\n                Examples in modal window context\n              </th>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">Cross button</td>\n              <td className=\"demo-table__td\" rowSpan=\"3\">\n                <div className=\"dialog-simulator\">\n                  <header className=\"dialog-simulator-header\">\n                    <div className=\"dialog-simulator-header__caption\">\n                      Some question\n                    </div>\n                    <Button baseClass=\"dialog-close\" title=\"Close dialog\" />\n                  </header>\n                  <div className=\"dialog-simulator-body\">Apply changes?</div>\n                  <div className=\"dialog-simulator-buttons\">\n                    <Button\n                      baseClass=\"dialog-button\"\n                      modifier=\"ok\"\n                      text=\"Apply\"\n                    />\n                    <Button baseClass=\"dialog-button\" text=\"Cancel\" />\n                  </div>\n                </div>\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"dialog-close\" title=\"Close dialog\"`}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"demo-table__td\">Main button in footer</td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"dialog-button\" modifier=\"ok\" text=\"Apply\"`}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td className=\"demo-table__td\">Basic button in footer</td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"dialog-button\" text=\"Cancel\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <th className=\"demo-table__th\" colSpan=\"3\">\n                What are that \"extremely creative designer\" means<br />\n                All examples from one page, with original texts\n              </th>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                In this case, text must be a bit lower relative to center. The\n                reason is possible text (\"Добавить акцию\" / \"Заменить акцию\")\n                have no letters with fragments below baseline like p, y, q. So I\n                also made a proposal to W3C to made new CSS property{\" \"}\n                <code>align-items: a-bit-lower</code>\n              </td>\n              <td className=\"demo-table__td ccmp-bg\">\n                <Button\n                  baseClass=\"products-button\"\n                  text=\"Заменить акцию\"\n                  icon=\"change\"\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"products-button\" text=\"Заменить акцию\" icon=\"change\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                This button is a bit different and text should have center align\n              </td>\n              <td className=\"demo-table__td ccmp-bg\">\n                <Button\n                  baseClass=\"service-restrict-button\"\n                  text=\"Запретить по фроду\"\n                  icon=\"disable\"\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"service-restrict-button\" text=\"Запретить по фроду\" icon=\"disable\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Kinda same to the first example, but with center vertical\n                alignment\n              </td>\n              <td className=\"demo-table__td ccmp-emphasis-bg\">\n                <Button baseClass=\"service-share-button\" text=\"Отправить SMS\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"service-share-button\" text=\"Отправить SMS\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Maybe we can use previous example with modifier... But maybe we\n                can just don't draw additional buttons and existing ones\n              </td>\n              <td className=\"demo-table__td ccmp-emphasis-bg\">\n                <Button baseClass=\"service-action-button\" text=\"Применить\" />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"service-action-button\" text=\"Применить\"`}\n                />\n              </td>\n            </tr>\n\n            <tr>\n              <td className=\"demo-table__td\">\n                Why to spend life to draw hover and focus state if you can just\n                draw new stateless buttons\n              </td>\n              <td className=\"demo-table__td ccmp-warning-bg\">\n                <Button\n                  baseClass=\"change-tp-cancel\"\n                  text=\"Отказаться от смены ТП\"\n                />\n              </td>\n              <td className=\"demo-table__td\">\n                <Code\n                  markup={`Button baseClass=\"change-tp-cancel\" text=\"Отказаться от смены ТП\"`}\n                />\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default Demo;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Demo from './Demo';\n\nReactDOM.render(<Demo />, document.getElementById('root'));"],"sourceRoot":""}